{"version":3,"sources":["components/error-indicator/death-star.jpg","components/header/index.js","components/header/header.js","services/swapiServices.js","components/spinner/spinner.js","components/error-indicator/error-indicator.js","components/random-planet/random-planet.js","components/random-planet/index.js","components/item-list/index.js","components/item-list/item-list.js","components/person-details/index.js","components/person-details/person-details.js","components/app/index.js","components/app/app.js","index.js"],"names":["module","exports","Header","className","href","SwapiService","_apiBase","url","fetch","this","res","ok","Error","status","json","getResource","results","map","_transformPerson","id","person","_transformPlanet","planet","_transformStarship","starship","item","match","_extractId","name","population","rotationPeriod","rotation_period","diameter","model","manufacturer","costInCredits","length","crew","passengers","cargoCapacity","gender","birthYear","eyeColor","Spinner","ErrorIndicator","src","icon","alt","RandomPlanet","state","loading","onPlanetLoaded","setState","error","onError","e","updatePlanet","getPlanet","then","catch","hasData","errorMessage","spinner","content","Component","PlanetView","ItemList","PersonDetails","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7be76db2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/death-star.c0d3f101.jpg\";","import Header from \"./header\";\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nimport \"./header.css\"\r\n\r\nconst Header = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n            <div className=\"container fontStyle\">\r\n                <a className=\"navbar-brand text-info font-weight-bold text-brand\" href=\"../../../public/index.html\">StarWarsDB</a>\r\n\r\n                <div className=\"collapse navbar-collapse ulList\">\r\n                    <ul className=\"navbar-nav d-flex\">\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"../../../public/index.html\">Peoples</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"../../../public/index.html\">Planets</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className=\"nav-link\" href=\"../../../public/index.html\">Starships</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n};\r\n\r\nexport default Header;","export default class SwapiService {\r\n\r\n    _apiBase = \"https://swapi.dev/api\";\r\n\r\n    async getResource(url) {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, received ${res.status}`)\r\n        };\r\n        return await res.json();\r\n    }\r\n\r\n    async getAllPeople() {\r\n        const res = await this.getResource(`/people/`);\r\n        return res.results.map(this._transformPerson);\r\n    }\r\n\r\n    async getPerson(id) {\r\n        const person = await this.getResource(`/people/${id}/`);\r\n        return this._transformPerson(person);\r\n    }\r\n\r\n    async getAllPlanets() {\r\n        const res = await this.getResource(`/planets/`);\r\n        return res.results.map(this._transformPlanet);\r\n    }\r\n\r\n    async getPlanet(id) {\r\n        const planet = await this.getResource(`/planets/${id}/`);\r\n        return this._transformPlanet(planet);\r\n    }\r\n\r\n    async getAllStarships() {\r\n        const res = await this.getResource(`/starships/`);\r\n        return res.results.map(this._transformStarship);\r\n    }\r\n\r\n    async getStarship(id) {\r\n        const starship = this.getResource(`/starships/${id}/`);\r\n        return this._transformStarship(starship);\r\n    }\r\n\r\n    _extractId(item) {\r\n        const idRegExp = /\\/([0-9]*)\\/$/;\r\n        return item.url.match(idRegExp)[1];\r\n    }\r\n\r\n    _transformPlanet(planet) {\r\n        return {\r\n            id: this._extractId(planet),\r\n            name: planet.name,\r\n            population: planet.population,\r\n            rotationPeriod: planet.rotation_period,\r\n            diameter: planet.diameter\r\n        };\r\n    }\r\n\r\n    _transformStarship(starship) {\r\n        return {\r\n            id: this._extractId(starship),\r\n            name: starship.name,\r\n            model: starship.model,\r\n            manufacturer: starship.manufacturer,\r\n            costInCredits: starship.costInCredits,\r\n            length: starship.length,\r\n            crew: starship.crew,\r\n            passengers: starship.passengers,\r\n            cargoCapacity: starship.cargoCapacity\r\n        }\r\n    }\r\n\r\n    _transformPerson(person) {\r\n        return {\r\n            id: this._extractId(person),\r\n            name: person.name,\r\n            gender: person.gender,\r\n            birthYear: person.birthYear,\r\n            eyeColor: person.eyeColor\r\n        }\r\n    }\r\n\r\n};","import React from 'react';\r\n\r\nimport \"./spinner.css\"\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"load\">\r\n            <div className=\"loadingio-spinner-double-ring-f2gsivkskhw\">\r\n                <div className=\"ldio-3fywb51tq1c\">\r\n                    <div></div>\r\n                    <div></div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                    <div>\r\n                        <div></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Spinner;","\r\nimport React from 'react';\r\n\r\nimport './error-indicator.css';\r\nimport icon from './death-star.jpg';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div className=\"error-indicator\">\r\n            <img src={icon} alt=\"error icon\" />\r\n            <span className=\"boom\"><h2>BOOM!</h2></span>\r\n            <span>\r\n                <h4>\r\n                    Something has gone terribly wrong\r\n                </h4>\r\n            </span>\r\n            <span>\r\n                <h5>\r\n                    (but we already sent droids to fix it)\r\n                </h5>\r\n            </span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ErrorIndicator;","import React, { Component, Fragment } from 'react';\r\n\r\nimport './random-planet.css';\r\n\r\nimport SwapiService from './../../services/swapiServices';\r\nimport Spinner from '../spinner/spinner';\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\"\r\n\r\nexport default class RandomPlanet extends Component {\r\n\r\n    SwapiService = new SwapiService();\r\n\r\n    state = {\r\n        planet: {},\r\n        loading: true\r\n    };\r\n\r\n    constructor() {\r\n        super();\r\n        this.updatePlanet();\r\n    }\r\n\r\n    onPlanetLoaded = (planet) => {\r\n        this.setState({\r\n            planet,\r\n            loading: false,\r\n            error: false\r\n        });\r\n    };\r\n\r\n    onError = (e) => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        });\r\n    }\r\n\r\n    updatePlanet() {\r\n        const id = 12;\r\n        this.SwapiService\r\n            .getPlanet(id)\r\n            .then(this.onPlanetLoaded)\r\n            .catch(this.onError);\r\n    };\r\n\r\n    render() {\r\n\r\n        const { planet, loading, error } = this.state;\r\n\r\n        const hasData = !(loading || error);\r\n\r\n        const errorMessage = error ? <ErrorIndicator /> : null;\r\n        const spinner = loading ? <Spinner /> : null;\r\n        const content = hasData ? <PlanetView planet={planet} /> : null;\r\n\r\n        return (\r\n            <div className=\"random-planet jumbotron rounded\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst PlanetView = ({ planet }) => {\r\n    const { id, name, population, rotationPeriod, diameter } = planet;\r\n\r\n    return (\r\n        <Fragment>\r\n            <img className=\"img-fluid planet-image\" alt=\"planet\"\r\n                src={`https://starwars-visualguide.com/assets/img/planets/${id}.jpg`} />\r\n            <div>\r\n                <h3>{name}</h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Population:</span>\r\n                        <span>{population}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Rotation Period:</span>\r\n                        <span>{rotationPeriod}</span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <span className=\"term\">Diameter:</span>\r\n                        <span>{diameter}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}","import RandomPlanet from './random-planet';\r\n\r\nexport default RandomPlanet;","import ItemList from \"./item-list\";\r\n\r\nexport default ItemList;","import React, { Component } from 'react';\r\n\r\nimport \"./item-list.css\"\r\n\r\nexport default class ItemList extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"border-list\">\r\n                <ul className=\"item-list list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        Luke Skywaker\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        Darth Vader\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        R2-D2\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import PersonDetails from './person-details';\r\n\r\nexport default PersonDetails;","import React, { Component } from 'react';\r\n\r\nimport \"./person-details.css\"\r\n\r\nexport default class PersonDetails extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"person-details card\">\r\n                <img className=\"person-image\" alt=\"\"\r\n                    src=\"https://starwars-visualguide.com/assets/img/characters/3.jpg\" />\r\n                <div className=\"card-body\">\r\n                    <h3 className=\"text-white\">R2-D2</h3>\r\n                    <ul className=\"list-group list-group-flush\">\r\n                        <li className=\"list-group-item\"> \r\n                            <span className=\"term\">Gender:</span>\r\n                            <span>male</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Birth Year:</span>\r\n                            <span>43</span>\r\n                        </li>\r\n                        <li className=\"list-group-item\">\r\n                            <span className=\"term\">Eye Color:</span>\r\n                            <span>red</span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import App from \"./app\";\r\n\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport Header from \"../header\";\r\nimport RandomPlanet from \"../random-planet\";\r\nimport ItemList from \"../item-list\";\r\nimport PersonDetails from \"../person-details\";\r\n\r\nimport \"./app.css\";\r\n\r\nexport default class App extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <div className=\"container mt-4\">\r\n                    <RandomPlanet />\r\n\r\n                    <div className=\"row mb2\">\r\n                        <div className=\"col-md-6\">\r\n                            <ItemList />\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <PersonDetails />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './components/app/index';\r\n\r\nReactDOM.render(<App />,\r\n    document.getElementById('root'));"],"sourceRoot":""}